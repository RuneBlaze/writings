Title         : FASTRAL Study Plan
Author        : Baqiao Liu
<!--
Logo          : True
-->

[TITLE]

# Goal & Algorithm Description

The goal is to use the idea of FASTRAL and adopt it to this new method "FASTRAL-Pro" and evaluate whether it can scale
to large datasets while being dramatically faster than ASTRAL-Pro, and potentially be more accurate than A-Pro.

## FASTRAL-Pro

The original procedure of FASTRAL (taken from the original paper) works as follows. Assuming input
as as a set of gene trees $G$ where $S$ is the set of species labels,

 1. Construct a collection of sub-samples of the gene trees in $G$
 2. For each sub-sample, run some summary method $M$ to obtain a tree on $S$, $S$ the taxon set
 3. Let $X$ be all bipartitions appearing in any tree obtained in step 2
 4. Run ASTRAL on the pair $(G, X)$

In the GDL setting, the inputs are now mul-trees $G$ along with a taxon set $S$. This implies that first, the summary
method $M$ must be able to handle mul-trees. Some methods that can do this are ASTRID-DISCO, ASTRAL-Pro, etc.. Second,
due to gene loss, a subsample might not cover all the taxa and thus its bipartitions can be useless. This motivates
a way to sample while ensuring the subsampled mul-trees represent all taxa, which I will refer to as obtaining a
"well-formed sample" of the input mul-trees. I will describe my proposed way to obtain a well-formed sample immediately after
this paragraph. For now, due to the good accuracy and fast running time of ASTRID-DISCO, ASTRID-DISCO is chosen
as the default summary method (the only reasonable alternative
due to running time seems to be ASTRID-multi, which performs worse in general than ASTRID-DISCO).
The final obvious modification is that in the final step, ASTRAL-Pro will be used instead of ASTRAL.

The way I am going to ensure that a sample is "well-formed" is described here: assume the original input of
mul-trees $G$ and taxon set $S$. First heuristically obtain a minimal cover of $S$ from $G$, where a subset
$G' \subseteq G$ covers $S$ if the union of the leafsets of $G'$ is $S$. This can be easily obtained
by some set-cover heuristic (I will just use the greedy heuristic for set-cover). Let this minimal cover be $C$. If some
subsampling $G'$ of $G$ does not cover $S$, then add the "minimal" (obtained by some heuristic) sub-cover $C$
to $G'$, i.e. $G' \gets G' \cup C$. (Another alternative is to use OCTAL to complete the species tree generated by
a degenerate subsample using the ASTRID-DISCO tree on $G$.)

To put the concrete FASTRAL-Pro pipeline into words. Fix some sampling method $f$, not necessarily ensuring
well-formedness of the subsamples, i.e. $f : G \to P(P(G))$ where $P(G)$ denotes the powerset of $G$, along with
some predetermined ASTRID flags, given the input mul-trees $G$ on taxon set $S$, FASTRAL-Pro operates as follows: 

 1. Run the sampling method. Let $S$ be the subsamples obtained by the subsampling method $f$, i.e. $S \gets f(G)$.
 Ensure that for each subsample $R \in S$, $R$ is well formed; otherwise modify $R$ using the method described above
 to make it well formed. Note that each $R$ here is a set of mul-trees.
 2. For each $R \in S$, run ASTRID-DISCO on $R$, thereby obtaining a species tree for each sub-sample.
 3. Let $X$ be all bipartitions appearing in any tree obtained in step 2
 4. Run ASTRAL-Pro on the pair $(G, X)$
 

The two free parameters of the algorithm described above are the subsampling method used, and also the ASTRID flags
used for ASTRID-DISCO. They will be further specified immediately in Section [#subsample].

## Subsampling Strategies & ASTRID Flags {#subsample}

Assume that the subsampling strategies described implicitly ensure that the subsamples are well-formed using the method described
in [#sec-fastral-pro]. I describe four subsampling strategies (with two variants for each strategy) that I plan to test
below. These subsampling strategies are designed for medium to large size inputs ($|G| \geq 50$). If the size of
input is small, another setting of the subsampling can be used that will be described later in this subsection.
Fix a parameter $s$, the number of subsamples (that do not represent all input mul-trees) used. Assume that
all fractions are all rounded down if not integers.

 1. (original FASTRAL, variable size): generate $s$ samples, one containing all gene family trees,
$\frac{s - 1}{5}$ containing 50% of the gene trees, $\frac{2 (s - 1)}{5}$ containing 25% of the gene trees, $\frac{2 (s - 1)}{5}$ containing 10% of the gene trees
 2. (original FASTRAL, same size): generate $s$ samples each containing 25% of the gene family trees
 3. (my own, large size subsamples): generate $s$ samples, one containing all gene trees,
 $\frac{s - 1}{10}$ containing expectedly 90% of the gene trees, $\frac{s - 1}{10}$ containing expectedly 80% of the gene trees, $\frac{s - 1}{5}$ containing
 expectedly 70% of the gene (family) trees, $\frac{s - 1}{5}$ containing expectedly 60% of the gene trees, $\frac{s - 1}{5}$ containing expectedly 50% of the
 gene trees.
 4. (my own, more randomized subsampling): generate $s$ samples, one containing all gene family trees. The rest of the subsamples
 will include each gene family tree with probability $p$ ($p$ fixed throughout one subsample), where $p$ is i.i.d. across all subsamples
 and $p$ drawn from $N(0.5, 0.16^2)$

For each strategy, if we are willing to trade running time for accuracy, more diverse summary methods
can be considered instead of just ASTRID-DISCO (for example, swapping in FastTree-DISCO on
some of the small subsamples can potentially work). I propose the following variant:

 - (variant a, accuracy-focused, FastTree-DISCO) use FastTree-DISCO on small subsamples (small as in cardinality $\leq 0.25 |G|$)
 instead of ASTRID-DISCO. This can potentially lead to better trees.

For small input sizes (# gene trees < 50), if willing to suffer drastically longer running time to trade for
accuracy, instead of only running ASTRID-DISCO, the following pipeline can be used w.r.t the subsamples

 5. (small input size strategy, accuracy focused): generate $s$ subsamples, one containing all the trees,
 $\frac{s - 1}{2}$ containing 75% of the trees, $\frac{s - 1}{2}$ containing 50% of the trees. For each subsample,
 instead of only running ASTRID-DISCO on the subsample, also run every competetive method that is not
 ASTRAL-Pro that works under GDL,
 so run SpeciesRax, CA-DISCO (IQTREE) on the subsample and add the bipartitions of the resulting
 trees to the constraint set $X$.

Recall that all subsamples are directly fed to ASTRID-DISCO (with some fixed flags). The flags that I plan to use is described below:

 - `uns`ï¼Œ UPGMA*, FastME+NNI, FastME+NNI+SPR. This is the current ASTRID default.
 - `ujfNnSs`, UPGMA*, NJ, FastME, NJ+NNI, FastME+NNI, NJ+NNI+SPR, FastME+NNI+SPR. This showed some improvement
 in some conditions in previous experiments

The values of $s$ that will be tested are: 3, 51, 101, 201, 301.

## Statistical Consistency

At this stage of the investigation, consistency seems not be of the focus, but the analogue of the statistical
consistency theorem of the original paper can be written below:

~ Theorem
Assume that the random sampling step of FASTRAL-Pro generates $m$ sub-samples, such that there is
at least one subsample $S_i$ whose size also increases to infinity with the number of genes.
Assume also that for that subsample the summary method used, $M$ is statistically consistent under GDL. Then,
FASTRAL-Pro is statistically consistent assuming correct rooting and tagging
under the the GDL model when used with $M$ and this sampling strategy.
~

This implies that if statistical consistency is desired for FASTRAL-Pro using
ASTRID-decompose, then we can just run another consistent method $M'$ on one of the size-increasing subsamples and add it to
the bipartitions $X$ while continuing to use ASTRID-decompose on all other subsamples. This way FASTRAL-Pro will be
statistically consistent under correct rooting and tagging, just like ASTRAL-Pro. (Other methods like ASTRAL-multi
can also be used but I am not sure it is necessary)


# Datasets

I plan to only use the following three datasets for the "training" phase. The first "default" dataset
is designed to have moderate GTEE, ILS, and gene duplication and loss and serve as a good default benchmark.
The second "default-dl" dataset is a variant of the default dataset multiplying the duplication and loss rate both by 10,
and this should lead to many species not represented in each gene tree due to gene loss. The third "default-iid" dataset
is a variant of the default dataset under the $M_{iid}$ model of missing taxa with 50% deletion rate.

The low number gene tree conditions (10, 20, 50) are for testing the "small input size strategy" as described
in [#subsample].


| Dataset Name                     | default  |
|----------------------------------|----------|
| sources of gene tree discordance | ILS, GDL |
| number of species                | 100      |
| mean gene tree estimation error  | 43.2%    |
| average discordance              | 20%      |
| duprate = lossrate               | 5e-10    |
| # of gene trees used             |100, 500, 1000 (, 10, 20, 50)|

| Dataset Name                     | default-dl  |
|----------------------------------|----------|
| sources of gene tree discordance | ILS, GDL |
| number of species                | 100      |
| mean gene tree estimation error  | to be calculated    |
| average discordance              | to be calculated      |
| duprate = lossrate               | 5e-9    |
| # of gene trees used             |100, 500, 1000 (, 10, 20, 50)|


| Dataset Name                     | default-iid      |
|----------------------------------|------------------|
| sources of gene tree discordance | ILS, GDL         |
| number of species                | 100              |
| mean gene tree estimation error  | to be calculated |
| average discordance              | 20%              |
| duprate = lossrate               | 5e-10            |
| # of gene trees used             |100, 500, 1000(, 10, 20, 50)    |
| taxa deletion rate               |    50%              |


For testing, I plan to use all datasets from the ASTRID-decompose paper for accuracy comparisons.
To be more specific, I plan to use the following datasets (# of genes
100, 500, 1000) for testing:

 - Experiment 1 datasets of the GDL paper "varying degree of GDL and
ILS, relative probabilities of gene duplication and loss, sequence length per
gene, and number of genes." Also the 1000 species analogue versions of the datasets.

# Methods

 - FASTRAL-Pro (all variants described), with flags `uns` and `ujfNnSs` for ASTRID (the current default), which otherwise proceeds as described in Section 1. This entails 24 combinations of
 flavors of FASTRAL-Pro can be evaluated.
 - A-Pro, default flags with `-t 0` (so in the end with flags `-i $genetrees -o $output -t 0`)
 - ASTRID-DISCO, with flags `uns` for ASTRID

# Experiments

Currently there are 2 different flags that can be used for ASTRID-DISCO, and four sub-sampling strategies proposed each
with three flavors (not modified, roughly doubling the # of subsamples, using ASTRID-multi in small subsamples), thus
in total 24 FASTRAL-Pro variants. I plan to run the following experiments (questions and hypothesis to be written
if these experiment conditions look reasonable):

## Experiment 1

Run all methods (FASTRAL-Pro variants, A-Pro, and ASTRID-DISCO) on `default` (excluding low number
of gene family tree conditions). This will lead to a general grasp
of the obvious differences in accuracy and running time of all the methods. If some variant of FASTRAL-Pro dramatically
underperforms in accuracy, then it can be dropped at this stage of the experiments.

## Experiment 2

Run all methods (FASTRAL-Pro variants, A-Pro, and ASTRID-DISCO) on the rest of the training datasets. This will
see if under missing taxa conditions (i.i.d. deletion, gene loss) the accuracy of FASTRAL-Pro variants still stay the same.

## Experiment 3

Run all methods on the GDL comparison paper's ILS and GTEE dataset to test robustness under varying ILS and GTEE.

## Experiment 4

Run all methods on 500 taxa, 1000 taxa analogues of the above datasets to mainly test running time differences.


 <!--
1. Run all methods on dataset "default" and "default200". The questions that I want to have answers for are listed below:
  - Question 1: the general accuracy of FASTRAL-Pro under moderate number of species and moderate conditions (ILS, GDL)
  -- is it comparable to ASTRAL-Pro? Will it be possible for it to consistently surpass the accuracy of ASTRID-decompose?
  - Hypothesis to the question: it will achieve similar accuracy (not significantly better or worse) compared to ASTRAL-Pro. If not,
  I think what I will learn from this is that the sampling strategy is not working well. It should have no significantly better accuracy
  or worse accuracy than ASTRID-decompose (based on the results from FASTRAL), but if it is significantly worse, this might
  show that sampling on very small sizes of the input decreases the accuracy by introducing bipartitions of inaccurate trees and I need to test only sampling large subsets
  of the input gene trees.
  - Question 2: Will there be a significant running time improvement in both the 100 species and 200 species setting?
   - Hypothesis to Q2: There will be a significant running time improvement in both the 100 species and 200 species setting. If not,
  I think this will show that ASTRAL-Pro is having a large overhead and I need to figure out a smarter sampling strategy.
  - Question 3: Will my "absurd" sampling strategy (only sample two subsets, one the entire set of gene trees fed to ASTRID-decompose, one 10% of the gene trees fed to ASTRAL-Pro) beat the other sampling strategies for FASTRAL-Pro, and achieve the same accuracy as ASTRID-decompose?
  - Hypothesis to Q3: I hope not, since the additional bipartitions should only expand the search space and help
  ASTRAL-Pro discover more optimal trees. If they don't help at all, this might indicate that I need to either
  devise very sophisticated sampling strategies, or realize that sampling does not really work.

2. Run all methods on the GDL comparison datasets varying DL rate and ILS. The obvious questions are as follows:
   - Question 1: the general accuracy of FASTRAL-Pro under varying DL rate -- is it better or worse than A-Pro under high GDL?
   - Hypothesis: I think it will be similar, and I don't know how to interpret any significant differences yet.
   - Question 2: the general accuracy of FASTRAL-Pro under varying ILS -- is it better or worse than A-Pro under high ILS?
   - Hypothesis: in the original FASTRAL paper, they reported a relative advantage of FASTRAL under high ILS compared to ASTRAL. I expect to see it appear here too.

3. Run all methods on the GDL comparison datasets of 1000 species.
   - Question 1: does FASTRAL perform very similar in accuracy compared to A-Pro while having drastically lower running time?
   - Hypothesis: it will be comparatively very fast while similar in accuracy, otherwise I suspect the sampling strategy is hampering its accuracy, and I need to rethink of a better sampling strategy.

-->
[reference manual]: http://research.microsoft.com/en-us/um/people/daan/madoko/doc/reference.html  "Madoko reference manual"
